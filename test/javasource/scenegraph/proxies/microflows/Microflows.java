// This file was generated by Mendix Modeler 7.23.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package scenegraph.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the SceneGraph module
	public static scenegraph.proxies.Scene ds_scene(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SceneGraph.ds_scene", params);
			return result == null ? null : scenegraph.proxies.Scene.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static scenegraph.proxies.Scene ds_spiral(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "SceneGraph.ds_spiral", params);
			return result == null ? null : scenegraph.proxies.Scene.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_add_texture(IContext context, scenegraph.proxies.Primitive _obj_primitive)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_primitive", _obj_primitive == null ? null : _obj_primitive.getMendixObject());
			Core.execute(context, "SceneGraph.ivk_add_texture", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_click(IContext context, scenegraph.proxies.Primitive _obj_primitive_clicked)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_primitive_clicked", _obj_primitive_clicked == null ? null : _obj_primitive_clicked.getMendixObject());
			Core.execute(context, "SceneGraph.ivk_click", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_configure(IContext context, scenegraph.proxies.Primitive _obj_primitive)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_primitive", _obj_primitive == null ? null : _obj_primitive.getMendixObject());
			Core.execute(context, "SceneGraph.ivk_configure", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_domain_drop(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SceneGraph.ivk_domain_drop", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_heightmapground_edit_heightmap(IContext context, scenegraph.proxies.HeightMapGround _obj_primitive)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_primitive", _obj_primitive == null ? null : _obj_primitive.getMendixObject());
			Core.execute(context, "SceneGraph.ivk_heightmapground_edit_heightmap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_heightmapground_select_heightmap(IContext context, scenegraph.proxies.HeightMapGround _obj_heightmapground, scenegraph.proxies.Image _obj_image)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_heightmapground", _obj_heightmapground == null ? null : _obj_heightmapground.getMendixObject());
			params.put("obj_image", _obj_image == null ? null : _obj_image.getMendixObject());
			Core.execute(context, "SceneGraph.ivk_heightmapground_select_heightmap", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_image_drop(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SceneGraph.ivk_image_drop", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_image_import_000(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SceneGraph.ivk_image_import_000", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_image_import_001(IContext context, scenegraph.proxies.FileDocument _obj_filedocument)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_filedocument", _obj_filedocument == null ? null : _obj_filedocument.getMendixObject());
			Core.execute(context, "SceneGraph.ivk_image_import_001", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_imendixobject2json_test(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "SceneGraph.ivk_imendixobject2json_test", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void ivk_rem_texture(IContext context, scenegraph.proxies.Primitive _obj_primitive)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("obj_primitive", _obj_primitive == null ? null : _obj_primitive.getMendixObject());
			Core.execute(context, "SceneGraph.ivk_rem_texture", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}