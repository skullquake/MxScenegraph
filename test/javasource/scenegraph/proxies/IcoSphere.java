// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package scenegraph.proxies;

public class IcoSphere extends scenegraph.proxies.Primitive
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SceneGraph.IcoSphere";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		r("r"),
		subdivisions("subdivisions"),
		doublesided("doublesided"),
		Name("Name"),
		x("x"),
		y("y"),
		z("z"),
		rotx("rotx"),
		roty("roty"),
		rotz("rotz"),
		sclx("sclx"),
		scly("scly"),
		sclz("sclz"),
		color("color"),
		visible("visible"),
		opacity("opacity"),
		Primitive_Node("SceneGraph.Primitive_Node"),
		Selected("SceneGraph.Selected"),
		Texture("SceneGraph.Texture"),
		Primitive_Material("SceneGraph.Primitive_Material");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IcoSphere(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SceneGraph.IcoSphere"));
	}

	protected IcoSphere(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject icoSphereMendixObject)
	{
		super(context, icoSphereMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("SceneGraph.IcoSphere", icoSphereMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SceneGraph.IcoSphere");
	}

	/**
	 * @deprecated Use 'IcoSphere.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static scenegraph.proxies.IcoSphere initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return scenegraph.proxies.IcoSphere.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static scenegraph.proxies.IcoSphere initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new scenegraph.proxies.IcoSphere(context, mendixObject);
	}

	public static scenegraph.proxies.IcoSphere load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return scenegraph.proxies.IcoSphere.initialize(context, mendixObject);
	}

	public static java.util.List<scenegraph.proxies.IcoSphere> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<scenegraph.proxies.IcoSphere> result = new java.util.ArrayList<scenegraph.proxies.IcoSphere>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SceneGraph.IcoSphere" + xpathConstraint))
			result.add(scenegraph.proxies.IcoSphere.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of r
	 */
	public final java.lang.Double getr()
	{
		return getr(getContext());
	}

	/**
	 * @param context
	 * @return value of r
	 */
	public final java.lang.Double getr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Double) getMendixObject().getValue(context, MemberNames.r.toString());
	}

	/**
	 * Set value of r
	 * @param r
	 */
	public final void setr(java.lang.Double r)
	{
		setr(getContext(), r);
	}

	/**
	 * Set value of r
	 * @param context
	 * @param r
	 */
	public final void setr(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Double r)
	{
		getMendixObject().setValue(context, MemberNames.r.toString(), r);
	}

	/**
	 * @return value of subdivisions
	 */
	public final java.lang.Integer getsubdivisions()
	{
		return getsubdivisions(getContext());
	}

	/**
	 * @param context
	 * @return value of subdivisions
	 */
	public final java.lang.Integer getsubdivisions(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.subdivisions.toString());
	}

	/**
	 * Set value of subdivisions
	 * @param subdivisions
	 */
	public final void setsubdivisions(java.lang.Integer subdivisions)
	{
		setsubdivisions(getContext(), subdivisions);
	}

	/**
	 * Set value of subdivisions
	 * @param context
	 * @param subdivisions
	 */
	public final void setsubdivisions(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer subdivisions)
	{
		getMendixObject().setValue(context, MemberNames.subdivisions.toString(), subdivisions);
	}

	/**
	 * @return value of doublesided
	 */
	public final java.lang.Boolean getdoublesided()
	{
		return getdoublesided(getContext());
	}

	/**
	 * @param context
	 * @return value of doublesided
	 */
	public final java.lang.Boolean getdoublesided(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.doublesided.toString());
	}

	/**
	 * Set value of doublesided
	 * @param doublesided
	 */
	public final void setdoublesided(java.lang.Boolean doublesided)
	{
		setdoublesided(getContext(), doublesided);
	}

	/**
	 * Set value of doublesided
	 * @param context
	 * @param doublesided
	 */
	public final void setdoublesided(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean doublesided)
	{
		getMendixObject().setValue(context, MemberNames.doublesided.toString(), doublesided);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final scenegraph.proxies.IcoSphere that = (scenegraph.proxies.IcoSphere) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SceneGraph.IcoSphere";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
